@tailwind base;
@tailwind components;
@tailwind utilities;

html {
  overscroll-behavior: none;
}


body {
  background-color: teal;
}

* {
  overscroll-behavior: contain;
}

.highlight:hover {
  background-color: #0e0a86 !important;
  color: white;
}

@media (max-height: 400px){
  #icons-container {
    flex-direction:unset;
    flex-wrap: wrap;
    width: 12rem;
  }
}

@media (min-height: 401px) {
  #icons-container {
    flex-direction: column;
  }
}

table {
  width: 100%; /* Ensures table takes full available width */
  border-collapse: collapse; /* Removes spacing between borders */ /* Ensures columns are equal width and not dictated by content */
}

@media (max-width: 768px){
  table {
    table-layout: fixed;
  }
}

th, td {
  border: 1px solid #ddd;
  text-align: left;
  word-wrap: break-word; /* Ensures words wrap inside the cell */
  white-space: normal; /* Allows text to wrap instead of staying in one line */ /* Breaks long words properly */
}

p {
  font-family: 'Pixelated MS Sans Serif';
}

.abs-centered {
  position: absolute;
    left: 50%;
    top: 1rem;
    transform: translate(-50%, 0);

}

textarea:focus {
  box-shadow: inset -1px -1px #fff, inset 1px 1px grey, inset -2px -2px #dfdfdf, inset 2px 2px #0a0a0a !important;
    box-sizing: border-box;
    resize: none;
}

.canvas-container {
  box-shadow: inset -1px -1px #fff, inset 1px 1px grey, inset -2px -2px #dfdfdf, inset 2px 2px #0a0a0a !important;
  width: 205px;
  padding-top: 2.5px;
}

#start-bar {
  background: silver;
    bottom: 0;
    box-shadow: 0 -2px #fffdfc, 0 -4px #cce9eb;
    display: flex
;
    height: 2.5rem;
    justify-content: space-between;
    padding: .5rem;
    position: absolute;
    width: 100%;
    z-index: 10;
}

#start-button {
  border: none;
    border-radius: 0;
    box-sizing: border-box;
    color: transparent;
    min-height: 23px;
    min-width: 75px;
    padding: 0 12px;
    text-shadow: 0 0 #222;
}

.pixelify {
  font-family: var(--font-pixelify);
}

.thick-shadow {
  box-shadow: rgba(0, 0, 0, 0.4) 0px 2px 4px, rgba(0, 0, 0, 0.3) 0px 7px 13px -3px, rgba(0, 0, 0, 0.2) 0px -3px 0px inset;
}

.asfalt {
  background-image: url('/billie-holiday.png');
}

.card {
  /* clip-path: polygon(
    0px calc(100% - 20px),
    4px calc(100% - 20px),
    4px calc(100% - 12px),
    8px calc(100% - 12px),
    8px calc(100% - 8px),
    12px calc(100% - 8px),
    12px calc(100% - 4px),
    20px calc(100% - 4px),
    20px 100%,
    calc(100% - 20px) 100%,
    calc(100% - 20px) calc(100% - 4px),
    calc(100% - 12px) calc(100% - 4px),
    calc(100% - 12px) calc(100% - 8px),
    calc(100% - 8px) calc(100% - 8px),
    calc(100% - 8px) calc(100% - 12px),
    calc(100% - 4px) calc(100% - 12px),
    calc(100% - 4px) calc(100% - 20px),
    100% calc(100% - 20px),
    100% 20px,
    calc(100% - 4px) 20px,
    calc(100% - 4px) 12px,
    calc(100% - 8px) 12px,
    calc(100% - 8px) 8px,
    calc(100% - 12px) 8px,
    calc(100% - 12px) 4px,
    calc(100% - 20px) 4px,
    calc(100% - 20px) 0px,
    20px 0px,
    20px 4px,
    12px 4px,
    12px 8px,
    8px 8px,
    8px 12px,
    4px 12px,
    4px 20px,
    0px 20px
  ); */
  border-radius: 10px;
}

.crossed-out {
  position: relative;
  display: inline-block; /* Keeps the effect limited to text width */
}

.crossed-out::after {
  content: "";
  position: absolute;
  top: 50%; /* Center the line vertically */
  left: -4px;
  width: 120%; /* Slightly wider to cover full text */
  height: 1.5px; /* Thickness of the line */
  background-color: black; /* Color of the line */
  transform: rotate(-20deg); /* Creates the diagonal strike-through */
  transform-origin: center;
  pointer-events: none; /* Ensures it doesnâ€™t interfere with text selection */
}

textarea:focus, input:focus, select:focus{
  outline: none;
  box-shadow: none;
}

/* #drawing-board {
  transform: scale(2,2)
} */

/* HTML: <div class="loader"></div> */
.loader {
  width: 50px;
  aspect-ratio: 1;
  --c:no-repeat radial-gradient(farthest-side,black 92%,#0000);
  background: 
    var(--c) 50%  0, 
    var(--c) 50%  100%, 
    var(--c) 100% 50%, 
    var(--c) 0    50%;
  background-size: 10px 10px;
  animation: l18 1s infinite;
  position: relative;
}
.loader::before {    
  content:"";
  position: absolute;
  inset:0;
  margin: 3px;
  background: repeating-conic-gradient(#0000 0 35deg,black 0 90deg);
  -webkit-mask: radial-gradient(farthest-side,#0000 calc(100% - 3px),#000 0);
  border-radius: 50%;
}
@keyframes l18 { 
  100%{transform: rotate(.5turn)}
}

.table-height {
  height: 200px;
}

@media (max-height: 400px) {
  .table-height {
    height: 100px;
  }
}

.loader {
  transform: scale(0.5)
}

.loading {
  color: rgb(0,0,0,0.0001);
}